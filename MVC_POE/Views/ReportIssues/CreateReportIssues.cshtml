@model MVC_POE.Models.ReportIssuesForm

@{
    ViewData["Title"] = "CreateReportIssues";
    var locations = new List<string> { "Bluewater Bay","Newton Park","Motherwell","Circular Drive","Charlo","Walmer","Linton Grange","Westering","Mill Park","Summerstrand", "Uitenhage", "Despatch" };
    var currentLocation = ViewData["CurrentLocation"]?.ToString();

    var categories = new List<string> { "Road", "Utilities", "Sanitisation", "Loadshedding", "Water"};
    var currentCategory = ViewData["CurrentCategories"]?.ToString();
}
<br />
<h1>Submit a Report Issue</h1>
<hr />
<div class="mb-3">
    <label>Progress:</label>
    <div class="progress">
        <div id="formProgress" class="progress-bar" role="progressbar" style="width: 0%; background-color: maroon;">
            0%
        </div>
    </div>
</div>

<div class="row">
    <div class="mb-3">
        <form asp-action="ShowReportIssuesConfirmation" method="post" enctype="multipart/form-data" id="reportForm">
            @Html.AntiForgeryToken()
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="form-group">
                <label asp-for="Location" class="control-label"></label>
                <select asp-for="Location" id="Location" class="form-select">
                    <option value="">All Locations</option>
                    @foreach (var loc in locations)
                    {
                        <option value="@loc">@loc</option>
                    }
                </select>
                <span asp-validation-for="Location" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Category" class="control-label"></label>
                <select asp-for="Category" id="Category" class="form-select">
                    <option value="">All Categories</option>
                    @foreach (var cat in categories)
                    {
                        <option value="@cat">@cat</option>
                    }
                </select>
                <span asp-validation-for="Category" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <input asp-for="Description" id="Description" class="form-control" />
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="MediaAttachment" class="control-label"></label>
                <input type="file" asp-for="MediaAttachment" id="MediaAttachment" name="file" class="form-control" />
                <span asp-validation-for="MediaAttachment" class="text-danger"></span>
            </div>
            <br />
            <div class="form-group">
                <button type="submit" class="button">Submit</button>
                <button type="reset" class="stroke-button" id="clearBtn">Clear</button>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
<script>
    const fields = ['Location', 'Category', 'Description', 'MediaAttachment'];

    function updateProgress() {
        let filled = 0;

        fields.forEach(id => {
            const el = document.getElementById(id);
            if (el) {
                if (el.type === "file") {
                    if (el.files.length > 0) filled++;
                } else if (el.value.trim() !== "") {
                    filled++;
                }
            }
        });

        const progress = Math.round((filled / fields.length) * 100);
        const progressBar = document.getElementById('formProgress');
        progressBar.style.width = progress + '%';
        progressBar.textContent = progress + '%';
    }

    // Attach event listeners
    fields.forEach(id => {
        const el = document.getElementById(id);
        if (el) {
            el.addEventListener('input', updateProgress);
            if (el.type === "file") el.addEventListener('change', updateProgress);
        }
    });

    // Reset progress bar when Clear button clicked
    document.getElementById("reportForm").addEventListener("reset", function () {
        const progressBar = document.getElementById('formProgress');
        progressBar.style.width = '0%';
        progressBar.textContent = '0%';
    });
</script>
